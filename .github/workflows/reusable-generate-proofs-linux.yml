name: Generate Proofs (Reusable)

on:
  workflow_call:
    inputs:
      artifact-name:
        description: "The name of the artifact with circuit.crct and assignment.tbl file pairs"
        required: true
        type: string
      proof-producer-ref:
        description: "Reference to proof-producer repository to checkout at"
        required: true
        type: string
      refs:
        description: "Multiline arg with modules' repo names and refs (e.g. `org/repo: ref`). Used for SyncWith handling"
        type: string
        required: false
      targets:
        type: string
        description: "Targets you want to craete proofs to. If empty, all target will be used"
        required: false
      output-artifact-name:
        type: string
        description: "Proofs will be merged into input artifact and uploaded into another artifact with this name"
        required: false
        default: "proofs"
      multithreaded:
        type: boolean
        description: "Use multithreaded producer"
        required: false
        default: false

    outputs:
      artifact-name:
        description: "The name of the artifact with circuits, assignments and proofs"
        value: ${{ jobs.build-and-test.outputs.artifact-name }}


jobs:
  build-and-test:
    # Testing of proof producer's PRs is run inside container. If GH worker update broke current action,
    #   consider using container here as well.
    name: Build prover, prove provided circuits
    runs-on: ubuntu-22.04
    strategy:
      matrix:
        cpp-compiler: [ clang++ ] # TODO: g++ built binary can't find libboost_thread-mt-x64.so.1.83.0 in runtime. Nix build will fix it
        build-type: [ Release ]
      fail-fast: false
    outputs:
      artifact-name: ${{ steps.set-artifact-name.outputs.artifact-name }}

    steps:
      - name: Checkout proof-producer
        uses: actions/checkout@v4
        with:
          repository: 'NilFoundation/proof-producer'
          ref: ${{ inputs.proof-producer-ref }}
          submodules: 'recursive'
          fetch-depth: 0

      - name: Checkout submodules to specified refs
        if: inputs.refs != ''
        uses: NilFoundation/ci-cd/actions/recursive-checkout@v1.1.1
        with:
          paths: |
            ${{ github.workspace }}/**
            !${{ github.workspace }}/
            !${{ github.workspace }}/**/.git/**
          refs: ${{ inputs.refs }}

      - name: Set usefull strings
        id: strings
        shell: bash
        run: |
          echo "build-dir=${{ github.workspace }}/build" >> $GITHUB_OUTPUT
          echo "dependencies-dir=${{ github.workspace }}/../dependencies" >> $GITHUB_OUTPUT
          echo "artifact-dir=$(realpath ${{ github.workspace }}/../artifacts)" >> $GITHUB_OUTPUT

          # Get platform version
          if [[ ${{ runner.os }} == 'Linux' ]]; then
            platform_version=$(lsb_release -rs)
            proc_number=$(nproc)
          elif [[ ${{ runner.os }} == 'macOS' ]]; then
            platform_version=$(sw_vers -productVersion)
            proc_number=$(sysctl -n hw.logicalcpu)
          fi
          echo "platform-version=${platform_version}" >> $GITHUB_OUTPUT

      - uses: cachix/install-nix-action@v27
      - uses: DeterminateSystems/magic-nix-cache-action@v7

      - name: Download Artifacts
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.artifact-name }}
          path: ${{ steps.strings.outputs.artifact-dir }}

      - name: List artifacts
        working-directory: ${{ steps.strings.outputs.artifact-dir }}
        run: find .

      - name: Make proofs for pairs
        working-directory: ${{ steps.strings.outputs.artifact-dir }}
        run: |
          extra_args=""
          if [[ "${{ inputs.multithreaded }}" == "true" ]]; then
            extra_args="--multithreaded "
          fi
          targets_str=$(echo "${{ inputs.targets }}" | awk '{$1=$1};1' | sed '/^$/d' | tr '\n' ' ' | sed 's/ $//')
          echo "targets from input: ${targets_str}"
          ${{ github.workspace }}/tests/make_proof_for_pairs.sh --use-nix ${extra_args} ${targets_str}

      - name: Remove all except proof.bin files
        working-directory: ${{ steps.strings.outputs.artifact-dir }}
        run: |
          find . -type f ! -name 'proof.bin' -exec rm {} +

      - name: Set artifact name output
        id: set-artifact-name
        run: |
          echo "artifact-name=${{ inputs.output-artifact-name }}" >> $GITHUB_OUTPUT

      - name: Upload circuits, assignments and proofs artifact
        # Only from a single matrix configuration. Assuming everyone produce the same results if not failed.
        if: matrix.cpp-compiler == 'clang++' && matrix.build-type == 'Release'
        uses: actions/upload-artifact@v3
        with:
          name: ${{ steps.set-artifact-name.outputs.artifact-name }}
          path: |
            ${{ steps.strings.outputs.artifact-dir }}
